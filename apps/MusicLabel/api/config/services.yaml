parameters:

    project.root_path: '%kernel.project_dir%/../../..'

    # jwToken config
    jwt.issued_by: '%env(JWT_ISSUED_BY)%'
    jwt.identified_by: '%env(JWT_IDENTIFIED_BY)%'
    jwt.permitted_for: '%env(JWT_PERMITTED_FOR)%'
    jwt.be_used_after: '%env(JWT_BE_USED_AFTER)%'
    jwt.expires_at: '%env(JWT_EXPIRES_AT)%'

services:
    #
    # default configuration for services in *this* file
    #
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Private services by default

        bind:
            $rootPath: '%kernel.project_dir%'
            $defaultBus: '@default.bus'
            $queryBus: '@query.bus'
            $commandBus: '@command.bus'
            $eventBus: '@event.bus'
            Redis $redis: '@snc_redis.default'

    _instanceof:
        Masfernandez\MusicLabel\Infrastructure\Api\Type\ValueObjectType:
            tags: ['app.dbal_type']

    #
    # Symfony
    #
    Masfernandez\MusicLabel\Infrastructure\Api\:
        resource: '%kernel.project_dir%/src/'
        exclude:
            - '%kernel.project_dir%/src/DependencyInjection/'
            - '%kernel.project_dir%/src/Entity/'
            - '%kernel.project_dir%/src/Kernel.php'
            - '%kernel.project_dir%/src/Tests/'

    #
    # Controllers
    #
    Masfernandez\MusicLabel\Infrastructure\Api\Controller\:
        resource: '%kernel.project_dir%/src/Controller/'
        tags: [ 'controller.service_arguments' ]

    #
    # Business logic
    #
    Masfernandez\MusicLabel\:
        resource: '%project.root_path%/src/'

    #
    # JWT
    #
    JsonWebTokenKey:
        class: 'Lcobucci\JWT\Signer\Key\InMemory'
        factory: [ 'Lcobucci\JWT\Signer\Key\InMemory','plainText' ]
        # JWT_CONTENTS, JWT_PASSPHRASE defined in vault -> ./console secrets:list --reveal
        arguments: [ '%env(JWT_CONTENTS)%','%env(JWT_PASSPHRASE)%' ]

    Signer:
        class: Lcobucci\JWT\Signer\Hmac\Sha256

    LcobucciConfiguration:
        class: 'Lcobucci\JWT\Configuration'
        factory: [ 'Lcobucci\JWT\Configuration', 'forSymmetricSigner' ]
        arguments: [ '@Signer','@JsonWebTokenKey' ]

    Configuration:
        class: 'Masfernandez\MusicLabel\Infrastructure\Api\JsonWebToken\Configuration'
        arguments:
            - '%jwt.issued_by%'
            - '%jwt.identified_by%'
            - '%jwt.permitted_for%'
            - '%jwt.be_used_after%'
            - '%jwt.expires_at%'

    Masfernandez\MusicLabel\Infrastructure\Api\JsonWebToken\Generator:
        public: true
        arguments: [ '@LcobucciConfiguration', '@Configuration' ]

    Masfernandez\MusicLabel\Infrastructure\Api\JsonWebToken\Validator:
        public: true
        arguments: [ '@LcobucciConfiguration' , '@Configuration' ]


    #
    # Messenger handlers
    #
    Masfernandez\MusicLabel\Auth\Application\JsonWebToken\Authenticate\JwTokenAuthenticator:
        tags:
            -   name: messenger.message_handler
                bus: command.bus
                method: execute
                handles: Masfernandez\MusicLabel\Auth\Application\JsonWebToken\Authenticate\AuthenticateJwTokenCommand

    Masfernandez\MusicLabel\Auth\Application\JsonWebToken\Create\JsonWebTokenCreator:
        tags:
            -   name: messenger.message_handler
                bus: query.bus
                method: execute
                handles: Masfernandez\MusicLabel\Auth\Application\JsonWebToken\Create\CreateJsonWebTokenCommand

    Masfernandez\MusicLabel\Auth\Application\Token\Authenticate\TokenAuthenticator:
        tags:
            - name: messenger.message_handler
              bus: command.bus
              method: execute
              handles: Masfernandez\MusicLabel\Auth\Application\Token\Authenticate\AuthenticateTokenCommand

    Masfernandez\MusicLabel\Auth\Application\Token\Create\TokenCreator:
        tags:
            -   name: messenger.message_handler
                bus: query.bus
                method: execute
                handles: Masfernandez\MusicLabel\Auth\Application\Token\Create\CreateTokenCommand

    Masfernandez\MusicLabel\Auth\Application\User\Create\UserCreator:
        tags:
            -   name: messenger.message_handler
                bus: command.bus
                method: execute
                handles: Masfernandez\MusicLabel\Auth\Application\User\Create\CreateUserCommand

    Masfernandez\MusicLabel\Backoffice\Catalog\Application\Album\Delete\AlbumDeleter:
        tags:
            -   name: messenger.message_handler
                bus: command.bus
                method: execute
                handles: Masfernandez\MusicLabel\Backoffice\Catalog\Application\Album\Delete\DeleteAlbumCommand

    Masfernandez\MusicLabel\Backoffice\Catalog\Application\Album\Search\Collection\AlbumsSearcher:
        tags:
            -   name: messenger.message_handler
                bus: query.bus
                method: execute
                handles: Masfernandez\MusicLabel\Backoffice\Catalog\Application\Album\Search\Collection\SearchAlbumsQuery

    Masfernandez\MusicLabel\Backoffice\Catalog\Application\Album\Search\Single\AlbumSearcher:
        tags:
            -   name: messenger.message_handler
                bus: query.bus
                method: execute
                handles: Masfernandez\MusicLabel\Backoffice\Catalog\Application\Album\Search\Single\SearchAlbumQuery

    Masfernandez\MusicLabel\Backoffice\Catalog\Application\Album\Update\AlbumUpdater:
        tags:
            -   name: messenger.message_handler
                bus: command.bus
                method: execute
                handles: Masfernandez\MusicLabel\Backoffice\Catalog\Application\Album\Update\UpdateAlbumCommand

    Masfernandez\MusicLabel\Backoffice\Catalog\Application\Album\Create\AlbumCreator:
        tags:
            -   name: messenger.message_handler
                bus: command.bus
                method: execute
                handles: Masfernandez\MusicLabel\Backoffice\Catalog\Application\Album\Create\CreateAlbumCommand

    Masfernandez\MusicLabel\Backoffice\Catalog\Application\Album\Replace\AlbumReplacer:
        tags:
            -   name: messenger.message_handler
                bus: command.bus
                method: execute
                handles: Masfernandez\MusicLabel\Backoffice\Catalog\Application\Album\Replace\ReplaceAlbumCommand

    Masfernandez\MusicLabel\Management\Application\Email\Send\EmailOnAlbumCreatedListener:
        tags:
            -   name: messenger.message_handler
                bus: event.bus
                method: execute
                handles: Masfernandez\MusicLabel\Backoffice\Catalog\Domain\Album\Event\AlbumCreatedDomainEvent